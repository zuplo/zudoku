/* Generated by scripts/generate-types.js */
import type { ReactNode } from "react";

type BundledLanguage = "abap" | "actionscript-3" | "ada" | "angular-expression" | "angular-html" | "angular-inline-style" | "angular-inline-template" | "angular-let-declaration" | "angular-template" | "angular-template-blocks" | "angular-ts" | "apache" | "apex" | "apl" | "applescript" | "ara" | "asciidoc" | "asm" | "astro" | "awk" | "ballerina" | "bat" | "beancount" | "berry" | "bibtex" | "bicep" | "blade" | "bsl" | "c" | "cadence" | "cairo" | "clarity" | "clojure" | "cmake" | "cobol" | "codeowners" | "codeql" | "coffee" | "common-lisp" | "coq" | "cpp" | "cpp-macro" | "crystal" | "csharp" | "css" | "csv" | "cue" | "cypher" | "d" | "dart" | "dax" | "desktop" | "diff" | "docker" | "dotenv" | "dream-maker" | "edge" | "elixir" | "elm" | "emacs-lisp" | "erb" | "erlang" | "es-tag-css" | "es-tag-glsl" | "es-tag-html" | "es-tag-sql" | "es-tag-xml" | "fennel" | "fish" | "fluent" | "fortran-fixed-form" | "fortran-free-form" | "fsharp" | "gdresource" | "gdscript" | "gdshader" | "genie" | "gherkin" | "git-commit" | "git-rebase" | "gleam" | "glimmer-js" | "glimmer-ts" | "glsl" | "gnuplot" | "go" | "graphql" | "groovy" | "hack" | "haml" | "handlebars" | "haskell" | "haxe" | "hcl" | "hjson" | "hlsl" | "html" | "html-derivative" | "http" | "hxml" | "hy" | "imba" | "ini" | "java" | "javascript" | "jinja" | "jinja-html" | "jison" | "json" | "json5" | "jsonc" | "jsonl" | "jsonnet" | "jssm" | "jsx" | "julia" | "kotlin" | "kusto" | "latex" | "lean" | "less" | "liquid" | "llvm" | "log" | "logo" | "lua" | "luau" | "make" | "markdown" | "markdown-vue" | "marko" | "matlab" | "mdc" | "mdx" | "mermaid" | "mipsasm" | "mojo" | "move" | "narrat" | "nextflow" | "nginx" | "nim" | "nix" | "nushell" | "objective-c" | "objective-cpp" | "ocaml" | "pascal" | "perl" | "php" | "plsql" | "po" | "polar" | "postcss" | "powerquery" | "powershell" | "prisma" | "prolog" | "proto" | "pug" | "puppet" | "purescript" | "python" | "qml" | "qmldir" | "qss" | "r" | "racket" | "raku" | "razor" | "reg" | "regexp" | "rel" | "riscv" | "rst" | "ruby" | "rust" | "sas" | "sass" | "scala" | "scheme" | "scss" | "sdbl" | "shaderlab" | "shellscript" | "shellsession" | "smalltalk" | "solidity" | "soy" | "sparql" | "splunk" | "sql" | "ssh-config" | "stata" | "stylus" | "svelte" | "swift" | "system-verilog" | "systemd" | "talonscript" | "tasl" | "tcl" | "templ" | "terraform" | "tex" | "toml" | "ts-tags" | "tsv" | "tsx" | "turtle" | "twig" | "typescript" | "typespec" | "typst" | "v" | "vala" | "vb" | "verilog" | "vhdl" | "viml" | "vue" | "vue-directives" | "vue-html" | "vue-interpolations" | "vue-sfc-style-variable-injection" | "vyper" | "wasm" | "wenyan" | "wgsl" | "wikitext" | "wit" | "wolfram" | "xml" | "xsl" | "yaml" | "zenscript" | "zig";
type BundledTheme = "andromeeda" | "aurora-x" | "ayu-dark" | "catppuccin-frappe" | "catppuccin-latte" | "catppuccin-macchiato" | "catppuccin-mocha" | "dark-plus" | "dracula" | "dracula-soft" | "everforest-dark" | "everforest-light" | "github-dark" | "github-dark-default" | "github-dark-dimmed" | "github-dark-high-contrast" | "github-light" | "github-light-default" | "github-light-high-contrast" | "gruvbox-dark-hard" | "gruvbox-dark-medium" | "gruvbox-dark-soft" | "gruvbox-light-hard" | "gruvbox-light-medium" | "gruvbox-light-soft" | "houston" | "kanagawa-dragon" | "kanagawa-lotus" | "kanagawa-wave" | "laserwave" | "light-plus" | "material-theme" | "material-theme-darker" | "material-theme-lighter" | "material-theme-ocean" | "material-theme-palenight" | "min-dark" | "min-light" | "monokai" | "night-owl" | "nord" | "one-dark-pro" | "one-light" | "plastic" | "poimandres" | "red" | "rose-pine" | "rose-pine-dawn" | "rose-pine-moon" | "slack-dark" | "slack-ochin" | "snazzy-light" | "solarized-dark" | "solarized-light" | "synthwave-84" | "tokyo-night" | "vesper" | "vitesse-black" | "vitesse-dark" | "vitesse-light";

type InputSidebarItem = {
    type: "doc";
    id: string;
    icon?: any | undefined;
    label?: string | undefined;
    badge?: {
        label: string;
        color: "green" | "blue" | "yellow" | "red" | "purple" | "indigo" | "gray" | "outline";
        placement?: ("start" | "end") | undefined;
        invert?: boolean | undefined;
    } | undefined;
} | string | {
    type: "link";
    icon?: any | undefined;
    label: string;
    href: string;
    description?: string | undefined;
    badge?: {
        label: string;
        color: "green" | "blue" | "yellow" | "red" | "purple" | "indigo" | "gray" | "outline";
        placement?: ("start" | "end") | undefined;
        invert?: boolean | undefined;
    } | undefined;
} | {
    type: "category";
    icon?: any | undefined;
    label: string;
    description?: string | undefined;
    collapsible?: boolean | undefined;
    collapsed?: boolean | undefined;
    link?: ({
        type: "doc";
        id: string;
        label?: string | undefined;
    } | string) | undefined;
} & { items: InputSidebarItem[] }

export type FlatZudokuConfig = {
    slots?: {
        [x: string]: any;
    } | undefined;
    UNSAFE_slotlets?: {
        [x: string]: any;
    } | undefined;
    mdx?: {
        components?: any | undefined;
    } | undefined;
    customPages?: {
        path: string;
        element?: NonNullable<ReactNode> | undefined;
        render?: any | undefined;
        prose?: boolean | undefined;
    }[] | undefined;
    plugins?: any[] | undefined;
    build?: any | undefined;
    protectedRoutes?: (string[] | undefined) | undefined;
    basePath?: (string | undefined) | undefined;
    canonicalUrlOrigin?: (string | undefined) | undefined;
    cdnUrl?: (((string | {
        base?: string | undefined;
        media?: string | undefined;
    }) | undefined) | undefined) | undefined;
    port?: (number | undefined) | undefined;
    https?: ({
        key: string;
        cert: string;
        ca?: string | undefined;
    } | undefined) | undefined;
    page?: {
        pageTitle?: string | undefined;
        logoUrl?: string | undefined;
        dir?: (("ltr" | "rtl") | undefined) | undefined;
        logo?: {
            src: {
                light: string;
                dark: string;
            };
            alt?: string | undefined;
            width?: (string | number) | undefined;
        } | undefined;
        showPoweredBy?: (boolean | undefined) | undefined;
        banner?: {
            message: NonNullable<ReactNode>;
            color?: (("note" | "tip" | "info" | "caution" | "danger") | string) | undefined;
            dismissible?: boolean | undefined;
        } | undefined;
        footer?: ({
            columns?: {
                position?: ("start" | "center" | "end") | undefined;
                title: string;
                links: {
                    label: string;
                    href: string;
                }[];
            }[] | undefined;
            social?: {
                label?: string | undefined;
                href: string;
                icon?: (("reddit" | "discord" | "github" | "x" | "linkedin" | "facebook" | "instagram" | "youtube" | "tiktok" | "twitch" | "pinterest" | "snapchat" | "whatsapp" | "telegram") | NonNullable<ReactNode>) | undefined;
            }[] | undefined;
            copyright?: string | undefined;
            logo?: {
                src: {
                    light: string;
                    dark: string;
                };
                alt?: string | undefined;
                width?: (string | number) | undefined;
            } | undefined;
            position?: ("start" | "center" | "end") | undefined;
        } | undefined) | undefined;
    } | undefined;
    topNavigation?: {
        label: string;
        id: string;
        default?: string | undefined;
        display?: ("auth" | "anon" | "always" | "hide") | undefined;
    }[] | undefined;
    sidebar?: {
        [x: string]: InputSidebarItem[];
    } | undefined;
    theme?: {
        light?: {
            background?: string | undefined;
            foreground?: string | undefined;
            card?: string | undefined;
            cardForeground?: string | undefined;
            popover?: string | undefined;
            popoverForeground?: string | undefined;
            primary?: string | undefined;
            primaryForeground?: string | undefined;
            secondary?: string | undefined;
            secondaryForeground?: string | undefined;
            muted?: string | undefined;
            mutedForeground?: string | undefined;
            accent?: string | undefined;
            accentForeground?: string | undefined;
            destructive?: string | undefined;
            destructiveForeground?: string | undefined;
            border?: string | undefined;
            input?: string | undefined;
            ring?: string | undefined;
            radius?: string | undefined;
        } | undefined;
        dark?: {
            background?: string | undefined;
            foreground?: string | undefined;
            card?: string | undefined;
            cardForeground?: string | undefined;
            popover?: string | undefined;
            popoverForeground?: string | undefined;
            primary?: string | undefined;
            primaryForeground?: string | undefined;
            secondary?: string | undefined;
            secondaryForeground?: string | undefined;
            muted?: string | undefined;
            mutedForeground?: string | undefined;
            accent?: string | undefined;
            accentForeground?: string | undefined;
            destructive?: string | undefined;
            destructiveForeground?: string | undefined;
            border?: string | undefined;
            input?: string | undefined;
            ring?: string | undefined;
            radius?: string | undefined;
        } | undefined;
        fonts?: {
            sans?: {
                url: string;
                fontFamily: string;
            } | undefined;
            mono?: {
                url: string;
                fontFamily: string;
            } | undefined;
        } | undefined;
    } | undefined;
    syntaxHighlighting?: ({
        languages?: BundledLanguage[] | undefined;
        themes?: {
            light?: BundledTheme;
            dark?: BundledTheme;
        } | undefined;
    } | undefined) | undefined;
    metadata?: {
        title?: string | undefined;
        description?: string | undefined;
        logo?: string | undefined;
        favicon?: string | undefined;
        generator?: string | undefined;
        applicationName?: string | undefined;
        referrer?: string | undefined;
        keywords?: string[] | undefined;
        authors?: string[] | undefined;
        creator?: string | undefined;
        publisher?: string | undefined;
    } | undefined;
    authentication?: ({
        type: "clerk";
        clerkPubKey: any;
        redirectToAfterSignUp?: string | undefined;
        redirectToAfterSignIn?: string | undefined;
        redirectToAfterSignOut?: string | undefined;
    } | {
        type: "openid";
        clientId: string;
        issuer: string;
        audience?: string | undefined;
        scopes?: string[] | undefined;
        redirectToAfterSignUp?: string | undefined;
        redirectToAfterSignIn?: string | undefined;
        redirectToAfterSignOut?: string | undefined;
    } | {
        type: "auth0";
        clientId: string;
        domain: string;
        audience?: string | undefined;
        scopes?: string[] | undefined;
        redirectToAfterSignUp?: string | undefined;
        redirectToAfterSignIn?: string | undefined;
        redirectToAfterSignOut?: string | undefined;
    } | {
        type: "supabase";
        supabaseUrl: string;
        supabaseKey: string;
        provider: "google" | "github" | "gitlab" | "bitbucket" | "facebook" | "twitter";
        redirectToAfterSignUp?: string | undefined;
        redirectToAfterSignIn?: string | undefined;
        redirectToAfterSignOut?: string | undefined;
    }) | undefined;
    search?: (({
        type: "inkeep";
        apiKey: string;
        integrationId: string;
        organizationId: string;
        primaryBrandColor: string;
        organizationDisplayName: string;
    } | {
        type: "pagefind";
        ranking?: {
            termFrequency: number;
            pageLength: number;
            termSimilarity: number;
            termSaturation: number;
        } | undefined;
        maxResults?: number | undefined;
        maxSubResults?: number | undefined;
        transformResults?: any | undefined;
    }) | undefined) | undefined;
    docs?: ({
        files: string;
        defaultOptions?: {
            toc?: boolean | undefined;
            disablePager?: boolean | undefined;
        } | undefined;
    } | {
        files: string;
        defaultOptions?: {
            toc?: boolean | undefined;
            disablePager?: boolean | undefined;
        } | undefined;
    }[]) | undefined;
    apis?: (({
        type: "url";
        input: string;
        id?: string | undefined;
        server?: string | undefined;
        navigationId?: string | undefined;
        categories?: {
            label: string;
            tags: string[];
        }[] | undefined;
        options?: {
            examplesLanguage?: string | undefined;
            disablePlayground?: boolean | undefined;
            disableSidecar?: boolean | undefined;
            showVersionSelect?: ("always" | "if-available" | "hide") | undefined;
            expandAllTags?: boolean | undefined;
            transformExamples?: any | undefined;
        } | undefined;
    } | {
        type: "file";
        input: string | string[];
        id?: string | undefined;
        server?: string | undefined;
        navigationId?: string | undefined;
        categories?: {
            label: string;
            tags: string[];
        }[] | undefined;
        options?: {
            examplesLanguage?: string | undefined;
            disablePlayground?: boolean | undefined;
            disableSidecar?: boolean | undefined;
            showVersionSelect?: ("always" | "if-available" | "hide") | undefined;
            expandAllTags?: boolean | undefined;
            transformExamples?: any | undefined;
        } | undefined;
    } | {
        type: "raw";
        input: string;
        id?: string | undefined;
        server?: string | undefined;
        navigationId?: string | undefined;
        categories?: {
            label: string;
            tags: string[];
        }[] | undefined;
        options?: {
            examplesLanguage?: string | undefined;
            disablePlayground?: boolean | undefined;
            disableSidecar?: boolean | undefined;
            showVersionSelect?: ("always" | "if-available" | "hide") | undefined;
            expandAllTags?: boolean | undefined;
            transformExamples?: any | undefined;
        } | undefined;
    }) | ({
        type: "url";
        input: string;
        id?: string | undefined;
        server?: string | undefined;
        navigationId?: string | undefined;
        categories?: {
            label: string;
            tags: string[];
        }[] | undefined;
        options?: {
            examplesLanguage?: string | undefined;
            disablePlayground?: boolean | undefined;
            disableSidecar?: boolean | undefined;
            showVersionSelect?: ("always" | "if-available" | "hide") | undefined;
            expandAllTags?: boolean | undefined;
            transformExamples?: any | undefined;
        } | undefined;
    } | {
        type: "file";
        input: string | string[];
        id?: string | undefined;
        server?: string | undefined;
        navigationId?: string | undefined;
        categories?: {
            label: string;
            tags: string[];
        }[] | undefined;
        options?: {
            examplesLanguage?: string | undefined;
            disablePlayground?: boolean | undefined;
            disableSidecar?: boolean | undefined;
            showVersionSelect?: ("always" | "if-available" | "hide") | undefined;
            expandAllTags?: boolean | undefined;
            transformExamples?: any | undefined;
        } | undefined;
    } | {
        type: "raw";
        input: string;
        id?: string | undefined;
        server?: string | undefined;
        navigationId?: string | undefined;
        categories?: {
            label: string;
            tags: string[];
        }[] | undefined;
        options?: {
            examplesLanguage?: string | undefined;
            disablePlayground?: boolean | undefined;
            disableSidecar?: boolean | undefined;
            showVersionSelect?: ("always" | "if-available" | "hide") | undefined;
            expandAllTags?: boolean | undefined;
            transformExamples?: any | undefined;
        } | undefined;
    })[]) | undefined;
    catalogs?: ({
        navigationId: string;
        label: string;
        items?: string[] | undefined;
        filterItems?: ((args_0: any, ...args_1: unknown[]) => any) | undefined;
    } | {
        navigationId: string;
        label: string;
        items?: string[] | undefined;
        filterItems?: ((args_0: any, ...args_1: unknown[]) => any) | undefined;
    }[]) | undefined;
    apiKeys?: {
        enabled: boolean;
        getKeys?: any | undefined;
        rollKey?: any | undefined;
        deleteKey?: any | undefined;
        updateKeyDescription?: any | undefined;
        createKey?: any | undefined;
    } | undefined;
    redirects?: {
        from: string;
        to: string;
    }[] | undefined;
    sitemap?: ({
        siteUrl: string;
        changefreq?: ("always" | "hourly" | "daily" | "weekly" | "monthly" | "yearly" | "never") | undefined;
        priority?: number | undefined;
        outDir?: string | undefined;
        autoLastmod?: boolean | undefined;
        exclude?: (((...args_0: unknown[]) => Promise<string[]>) | string[]) | undefined;
    } | undefined) | undefined;
    enableStatusPages?: (boolean | undefined) | undefined;
    defaults?: {
        apis: {
            examplesLanguage?: string | undefined;
            disablePlayground?: boolean | undefined;
            disableSidecar?: boolean | undefined;
            showVersionSelect?: ("always" | "if-available" | "hide") | undefined;
            expandAllTags?: boolean | undefined;
            transformExamples?: any | undefined;
        };
        examplesLanguage?: string | undefined;
    } | undefined;
}