/* @vite-plugin-inject font */
@import "./defaultTheme.css" layer(theme);
@import "tailwindcss" source("..");

/* @vite-plugin-inject main */

@plugin "@tailwindcss/typography";
@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);

  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);

  --shadow-2xs: var(--shadow-2xs);
  --shadow-xs: var(--shadow-xs);
  --shadow-sm: var(--shadow-sm);
  --shadow: var(--shadow);
  --shadow-md: var(--shadow-md);
  --shadow-lg: var(--shadow-lg);
  --shadow-xl: var(--shadow-xl);
  --shadow-2xl: var(--shadow-2xl);

  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

@utility prose {
  a {
    @apply font-normal underline-offset-4 hover:text-primary;
  }
  blockquote {
    @apply not-italic text-neutral-500/75 dark:text-neutral-400;
    /* Disable adding quote marks to block-quotes: https://github.com/tailwindlabs/tailwindcss-typography/issues/66 */
    p {
      &:first-of-type::before,
      &:last-of-type::after {
        content: none;
      }
    }
  }
  hr {
    @apply border-border;
  }
  code::before {
    content: none;
  }
  code::after {
    content: none;
  }
}

@layer base {
  :root {
    --top-header-height: 65px;
    --top-nav-height: 50px;
    --banner-height: 35px;
    --header-height: calc(
      var(--top-header-height) + var(--top-nav-height) + var(--banner-height)
    );
    --scroll-padding: calc(var(--header-height) + 10px);
    --side-nav-width: --spacing(72);
    --padding-content-top: --spacing(6);
    --padding-content-bottom: --spacing(12);
    --padding-nav-item: --spacing(2.5);
    --sidecar-grid-cols: 1fr minmax(200px, 260px);
    --scrollbar-width: calc(100vw - 100%);
  }

  html {
    /* This is to prevent layout jumping when the scrollbar appears/disappears */
    @apply -me-(--scrollbar-width) scroll-pt-(--scroll-padding);
    --dark: -1;
  }

  html.dark {
    --dark: 1;
  }

  html,
  body {
    @apply h-full overscroll-none;
  }

  details summary {
    @apply cursor-pointer;
  }

  #root {
    @apply min-h-screen w-full grid grid-rows-[auto_1fr];
  }

  * {
    @apply border-border;
  }

  body {
    @apply antialiased bg-background text-foreground overflow-y-auto overflow-x-clip;
    font-feature-settings:
      "rlig" 1,
      "calt" 1;
  }

  ::selection {
    @apply bg-primary text-primary-foreground;
  }

  .bg-primary::selection,
  .bg-primary ::selection {
    background: var(--color-background);
    color: var(--color-foreground);
  }

  .dark {
    color-scheme: dark;
  }

  button:not(:disabled),
  [role="button"]:not(:disabled) {
    cursor: pointer;
  }

  .prose.prose {
    ul.contains-task-list {
      @apply list-none px-0;
      li {
        @apply flex items-center gap-2;
      }
    }
  }

  .shiki {
    counter-reset: line;
    @apply leading-normal;
  }
  .code-block .shiki {
    @apply grid grid-rows-1;
    grid-auto-rows: 1lh;
  }

  .shiki,
  .shiki span {
    color: var(--shiki-light);
    font-style: var(--shiki-light-font-style) !important;
    font-weight: var(--shiki-light-font-weight) !important;
    text-decoration: var(--shiki-light-text-decoration) !important;
  }

  .dark .shiki,
  .dark .shiki span {
    color: var(--shiki-dark);
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }

  .line-numbers .shiki .line::before {
    counter-increment: line;
    content: counter(line);
    @apply tabular-nums inline-flex items-baseline justify-end me-4 w-3 text-muted-foreground/25;
  }

  .shiki.not-inline .line {
    @apply block -mx-4 px-4 w-[calc(100%+2rem)];
    --highlighted-bg: hsl(
      from hsl(var(--muted)) h s calc(l + 4 * var(--dark)) / 50%
    );
  }
  .shiki .line.highlighted {
    @apply bg-(--highlighted-bg);
  }

  .shiki .highlighted-word {
    @apply bg-(--highlighted-bg) px-0.5 rounded;
    box-shadow: 0 0 0 4px var(--highlighted-bg);
  }

  select {
    @apply focus-visible:ring-primary focus-visible:ring-[1.5px] focus:outline-hidden;
  }

  .CollapsibleContent {
    --easing: cubic-bezier(0.4, 0, 0.2, 1);
    --slide-offset: -0.75rem;
  }
  .CollapsibleContent[data-state="open"] {
    animation: slideDown 300ms var(--easing);
  }
  .CollapsibleContent[data-state="closed"] {
    animation: slideUp 300ms var(--easing);
  }

  @keyframes slideDown {
    from {
      height: 0;
      opacity: 0;
      transform: translateY(var(--slide-offset));
    }
    to {
      height: var(--radix-collapsible-content-height);
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideUp {
    from {
      height: var(--radix-collapsible-content-height);
      opacity: 1;
      transform: translateY(0);
    }
    to {
      height: 0;
      opacity: 0;
      transform: translateY(var(--slide-offset));
    }
  }

  .scrollbar {
    /* For Firefox */
    scrollbar-width: thin;
    scrollbar-color: transparent transparent;
  }

  .scrollbar:hover {
    scrollbar-color: var(--scrollbar-color, hsla(var(--border))) transparent;
  }

  .scrollbar::-webkit-scrollbar {
    padding: 2px;
    width: 12px;
    height: 12px;
    background: transparent;
  }

  .scrollbar:hover::-webkit-scrollbar-thumb {
    background: hsla(var(--border));
    border-radius: 12px;
    border: 2px solid transparent;
    background-clip: content-box;
  }

  .scrollbar::-webkit-scrollbar-thumb {
    background: transparent;
  }

  .scrollbar::-webkit-scrollbar-corner {
    background: transparent;
  }

  .wavy-line {
    @apply bg-primary w-full;

    --s: 3px; /* size of the wave */
    --b: 2px; /* thickness of the line */
    --m: 1; /* curvature of the wave [0 2] */

    --R: calc(var(--s) * sqrt(var(--m) * var(--m) + 1) + var(--b) / 2);
    height: calc(2 * var(--R));
    --_g:
      #0000 calc(99% - var(--b)), #000 calc(101% - var(--b)) 99%, #0000 101%;
    mask:
      radial-gradient(
          var(--R) at left 50% bottom calc(-1 * var(--m) * var(--s)),
          var(--_g)
        )
        calc(50% - 2 * var(--s)) calc(50% - var(--s) / 2 - var(--b) / 2) /
        calc(4 * var(--s)) calc(var(--s) + var(--b)) repeat-x,
      radial-gradient(
          var(--R) at left 50% top calc(-1 * var(--m) * var(--s)),
          var(--_g)
        )
        50% calc(50% + var(--s) / 2 + var(--b) / 2) / calc(4 * var(--s))
        calc(var(--s) + var(--b)) repeat-x;
  }
}

@layer utilities {
  .stepper > ol {
    --bullet-size: 1.75rem;
    --line-spacing: 0.25rem;
    @apply flex flex-col list-none p-0 m-0;
    counter-reset: step-counter;
  }

  .stepper > ol > li {
    @apply relative ps-12 pb-6 my-0;
    counter-increment: step-counter;
  }

  .stepper > ol > li:last-child {
    @apply pb-0;
  }

  /* Bullet with number */
  .stepper > ol > li::before {
    @apply absolute start-0 flex items-center justify-center size-(--bullet-size);
    @apply bg-muted/80 border border-border text-muted-foreground text-[calc(var(--bullet-size)/2)] font-semibold rounded-full;
    content: counter(step-counter);
  }

  /* Vertical line */
  .stepper > ol > li::after {
    @apply absolute content-[''] w-[2px] bg-border -translate-x-1/2;
    inset-inline-start: calc(var(--bullet-size) / 2);
    top: calc(var(--bullet-size) + var(--line-spacing));
    height: calc(100% - var(--bullet-size) - (2 * var(--line-spacing)));
  }

  /*
    This can't be as `rtl:*` variant above, because it breaks the CSS minification. See:
    https://github.com/tailwindlabs/tailwindcss/issues/16582
  */
  [dir="rtl"] .stepper > ol > li::after {
    @apply translate-x-1/2;
  }

  .stepper > ol > li > :first-child {
    @apply mt-0 pt-0;
    transform: translateY(calc((var(--bullet-size) - 1lh) / 2));
  }
}
