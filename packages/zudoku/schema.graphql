schema {
  query: Query
}

type EncodingItem {
  allowReserved: Boolean
  contentType: String
  explode: Boolean
  headers: JSONObject
  name: String!
  style: String
}

type ExampleItem {
  description: String
  externalValue: String
  name: String!
  summary: String
  value: JSON
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

"""
OpenAPI schema scalar type that handles circular references
"""
scalar JSONSchema

type MediaTypeObject {
  encoding: [EncodingItem!]
  examples: [ExampleItem!]
  mediaType: String!
  schema: JSONSchema
}

type OperationItem {
  contentTypes: [String!]!
  deprecated: Boolean
  description: String
  extensions: JSONObject
  method: String!
  operationId: String
  parameters: [ParameterItem!]
  path: String!
  requestBody: RequestBodyObject
  responses: [ResponseItem!]!
  slug: String!
  summary: String
  tags: [TagItem!]
}

enum ParameterIn {
  cookie
  header
  path
  query
}

type ParameterItem {
  allowEmptyValue: Boolean
  allowReserved: Boolean
  deprecated: Boolean
  description: String
  examples: [ExampleItem!]
  explode: Boolean
  extensions: JSONObject
  in: ParameterIn!
  name: String!
  required: Boolean
  schema: JSONSchema
  style: String
}

type PathItem {
  methods: [String!]!
  path: String!
}

type Query {
  schema(input: JSON!, type: SchemaType!): Schema!
}

type RequestBodyObject {
  content: [MediaTypeObject!]
  description: String
  required: Boolean
}

type ResponseItem {
  content: [MediaTypeObject!]
  description: String
  extensions: JSONObject
  headers: JSON
  links: JSON
  statusCode: String!
}

type Schema {
  description: String
  extensions: JSONObject
  openapi: String!
  operations(
    method: String
    operationId: String
    path: String
    tag: String
    untagged: Boolean
  ): [OperationItem!]!
  paths: [PathItem!]!
  servers: [Server!]!
  summary: String
  tags(name: String): [SchemaTag!]!
  title: String!
  url: String
  version: String!
}

type SchemaTag {
  description: String
  name: String!
  operations: [OperationItem!]!
}

enum SchemaType {
  file
  raw
  url
}

type Server {
  description: String
  url: String!
}

type TagItem {
  description: String
  extensions: JSONObject
  name: String!
}
