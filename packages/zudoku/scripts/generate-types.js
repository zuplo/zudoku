import icons from "lucide-react/dist/esm/dynamicIconImports.js";

import { mkdir, writeFile } from "node:fs/promises";
import { fileURLToPath } from "node:url";
import { format } from "prettier";

const iconNames = Object.keys(icons)
  .sort()
  .map((icon) => `"${icon}"`)
  .join(" | ");

const typeDefinition = await format(
  `/* Generated by scripts/generate-types.js */
export type IconNames = ${iconNames};`,
  { parser: "typescript" },
);

const outputPath = fileURLToPath(
  new URL("../src/config/validators/icon-types.ts", import.meta.url),
);
await writeFile(outputPath, typeDefinition);

// Generate shiki code
const { languageNames } = await import("@shikijs/langs");
const { themeNames } = await import("@shikijs/themes");

const generateFiles = async (items, type) => {
  const dir = fileURLToPath(new URL(`../src/shiki/${type}`, import.meta.url));
  await mkdir(dir, { recursive: true });

  for (const item of items) {
    await writeFile(
      fileURLToPath(
        new URL(`../src/shiki/${type}/${item}.js`, import.meta.url),
      ),
      `export { default } from "@shikijs/${type}/${item}";\n`,
    );
  }
};

await Promise.all([
  generateFiles(languageNames, "langs"),
  generateFiles(themeNames, "themes"),
]);
