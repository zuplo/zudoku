import icons from "lucide-react/dist/esm/dynamicIconImports.js";
import { mkdir, writeFile } from "node:fs/promises";
import { fileURLToPath } from "node:url";
import { format } from "prettier";
import { tsImport } from "tsx/esm/api";
import { printNode, zodToTs } from "zod-to-ts";

const iconNames = Object.keys(icons)
  .sort()
  .map((icon) => `"${icon}"`)
  .join(" | ");

const typeDefinition = await format(
  `/* Generated by scripts/generate-types.js */
export type IconNames = ${iconNames};`,
  { parser: "typescript" },
);

const outputPath = fileURLToPath(
  new URL("../src/config/validators/icon-types.ts", import.meta.url),
);
await writeFile(outputPath, typeDefinition);

// Generate shiki code
const { languageNames } = await import("@shikijs/langs");
const { themeNames } = await import("@shikijs/themes");

const generateFiles = async (items, type) => {
  const dir = fileURLToPath(new URL(`../src/shiki/${type}`, import.meta.url));
  await mkdir(dir, { recursive: true });

  for (const item of items) {
    await writeFile(
      fileURLToPath(
        new URL(`../src/shiki/${type}/${item}.js`, import.meta.url),
      ),
      `export { default } from "@shikijs/${type}/${item}";\n`,
    );
  }
};

await Promise.all([
  generateFiles(languageNames, "langs"),
  generateFiles(themeNames, "themes"),
]);

// Generate ZudokuConfig types
const { ZudokuConfigSchema } = await tsImport(
  "../src/config/validators/validate.ts",
  import.meta.url,
);

const { generateInputSidebarItemTypeString } = await tsImport(
  "../src/config/validators/InputSidebarSchema.ts",
  import.meta.url,
);

const tsConfigSchema = zodToTs(ZudokuConfigSchema, "ZudokuConfig");

const inputSidebarItemType = generateInputSidebarItemTypeString(
  zodToTs,
  printNode,
);

// Hack: Replace ZudokuConfig[] with InputSidebarItem[] in the main config
// See: https://github.com/sachinraja/zod-to-ts#zlazy
const configTypeString = printNode(tsConfigSchema.node);
const fixedConfigType = configTypeString.replace(
  /ZudokuConfig\[\]/g,
  "InputSidebarItem[]",
);

const result = `
/* Generated by scripts/generate-types.js */
import type { ReactNode } from "react";

type BundledLanguage = ${languageNames.map((v) => `"${v}"`).join(" | ")};
type BundledTheme = ${themeNames.map((v) => `"${v}"`).join(" | ")};

type InputSidebarItem = ${inputSidebarItemType}

export type FlatZudokuConfig = ${fixedConfigType}

`.trim();

// write to file
await writeFile(
  fileURLToPath(
    new URL("../src/config/validators/flat-config.ts", import.meta.url),
  ),
  result,
);
