import { languageNames } from "@shikijs/langs";
import { themeNames } from "@shikijs/themes";
import icons from "lucide-react/dist/esm/dynamicIconImports.js";

import { writeFile } from "node:fs/promises";
import { fileURLToPath } from "node:url";
import { format } from "prettier";

const iconNames = Object.keys(icons)
  .sort()
  .map((icon) => `"${icon}"`)
  .join(" | ");

const typeDefinition = await format(
  `/* Generated by scripts/generate-types.js */
export type IconNames = ${iconNames};`,
  { parser: "typescript" },
);

const outputPath = fileURLToPath(
  new URL("../src/config/validators/icon-types.ts", import.meta.url),
);
await writeFile(outputPath, typeDefinition);

const typeDefinition2 = await format(
  `/* Generated by scripts/generate-types.js */
export const availableLanguages = ${JSON.stringify(languageNames)} as const
export type LanguageName = (typeof availableLanguages)[number];
export const availableThemes = ${JSON.stringify(themeNames.flat())} as const;
export type ThemeName = (typeof availableThemes)[number];`,
  { parser: "typescript" },
);

const outputPath2 = fileURLToPath(
  new URL("../src/config/validators/shiki.ts", import.meta.url),
);
await writeFile(outputPath2, typeDefinition2);
