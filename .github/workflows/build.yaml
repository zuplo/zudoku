name: Build
on:
  workflow_call:
  pull_request:

jobs:
  build:
    name: Build & Test
    runs-on:
      group: ubuntu-large-runners
    permissions:
      actions: read
      contents: read
      id-token: write

    env:
      COREPACK_ENABLE_STRICT: 0
      ZUDOKU_INTERNAL_DEV: true

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm install nx --global

      - uses: nrwl/nx-set-shas@v4

      - run: pnpm check
      - run: nx run-many -t build:ci test

      - name: Get Variables
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Version (Canary)
        if: github.event_name == 'push'
        run: nx release version --specifier 0.0.0-${{ steps.vars.outputs.sha_short }} --git-tag=false

      - name: Publish Modules
        run: pnpm publish --provenance --filter zudoku --filter create-zudoku --filter config --tag canary --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Build Examples
        run: nx run-many -t build --projects=tag:example

        # Check if the stats file exists, if zudoku doesn't change in the PR
        # the stats file won't exist and we don't need to upload it
      - name: Has Stats
        run: echo "exists=${{ hashFiles('./packages/zudoku/stats.html') != '' }}" >> $GITHUB_OUTPUT
        id: stats-file

  check-links:
    name: Check Links
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm install nx --global

      - run: nx run docs:build

      - name: Restore lychee cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: .lycheecache
          key: cache-lychee-v3-${{ github.sha }}
          restore-keys: cache-lychee-v2-

      - name: Link Checker
        uses: lycheeverse/lychee-action@v2
        with:
          args: --fallback-extensions html --cache --max-cache-age 1d --config ./docs/lychee.toml --root-dir $PWD/docs/dist --include-fragments ./docs/dist
      - name: Save lychee cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .lycheecache
          key: cache-lychee-v3-${{ github.sha }}
