{
  "openapi": "3.0.3",
  "info": {
    "title": "ApiKeyService API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.example.com"
    }
  ],
  "tags": [
    {
      "name": "API Keys",
      "description": "API for managing API keys"
    },
    {
      "name": "Developer",
      "description": "API for managing developer resources"
    }
  ],
  "paths": {
    "/v1/developer/api-keys": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "get": {
        "tags": ["API Keys"],
        "summary": "Get API keys",
        "description": "Returns the API keys associated with the current developer. ",
        "operationId": "getKeys",
        "responses": {
          "200": {
            "description": "List of API keys",
            "content": {
              "application/json": {
                "examples": {
                  "API Keys": {
                    "$ref": "#/components/examples/API Keys"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/API Key Container"
                  }
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "anything-goes",
          "handler": {
            "export": "default",
            "module": "$import(./modules/api-keys)",
            "options": {}
          },
          "policies": {
            "inbound": ["customer-oidc", "upstream-api-key-mgmt-gcp-auth"]
          }
        }
      }
    },
    "/v1/developer/api-keys/{id}/key": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "delete": {
        "tags": ["API Keys"],
        "summary": "Roll API key",
        "description": "Rolls the current API key to a new value. This will create a new API key and invalidate the old one. You __may__ pass a date to invalidate (`expiresOn`) the current key on a future date. Omitting the request body will default to invalidating the current key in 7 days.",
        "operationId": "rollKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "examples": [
                {
                  "value": "2025-12-31",
                  "summary": "Invalidate on a specific date"
                },
                {
                  "value": "",
                  "summary": "without body"
                }
              ],
              "schema": {
                "type": "object",
                "properties": {
                  "expiresOn": {
                    "type": "string",
                    "format": "date",
                    "description": "Date when current API key should be invalidated (YYYY-MM-DD)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "API key rotated successfully, returns the new key in the response body",
            "content": {
              "application/json": {
                "example": {
                  "$ref": "#/components/examples/API Key"
                },
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/API Key"
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "anything-goes",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://api.example.com"
            }
          },
          "policies": {
            "inbound": ["customer-oidc", "upstream-api-key-mgmt-gcp-auth"]
          }
        }
      }
    },
    "/v1/developer/api-keys/{id}": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "patch": {
        "tags": ["API Keys"],
        "summary": "Update API key",
        "description": "Updates the description of the API key. This will update the description of the API key",
        "operationId": "updateKeyDescription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "This is used in our mobile app & pwa app to authenticate requests to our API.",
                "label": "My API Key"
              },
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key updated",
            "content": {
              "application/json": {
                "example": {
                  "$ref": "#/components/examples/API Key"
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/API Key"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/v1/developer/api-keys/{id}/previousKeys/{previousKeyId}": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "delete": {
        "tags": ["API Keys"],
        "summary": "Delete rolled API key",
        "description": "Delete the rolled API key making it unusable right away. __Only rolled keys can be deleted.__ This action is irreversible.",
        "operationId": "deletePreviousKey",
        "responses": {
          "204": {
            "description": "Previous API key deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "previousKeyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },

    "/certs/manifest": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "x-internal": true,
      "post": {
        "summary": "Create a signed manifest",
        "operationId": "getUsage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issuer": {
                    "type": "string",
                    "format": "uri"
                  },
                  "zuploAccount": {
                    "type": "string"
                  },
                  "bucketId": {
                    "type": "string"
                  }
                },
                "required": ["issuer", "zuploAccount", "bucketId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usage information returned"
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "default",
            "module": "$import(./modules/sign-manifest)",
            "options": {}
          },
          "policies": {
            "inbound": ["request-validation-inbound"]
          }
        }
      }
    },
    "/v1/developer/api-keys/usage": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "get": {
        "tags": ["API Keys"],
        "summary": "Get API key usage",
        "description": "",
        "x-zuplo-route": {
          "corsPolicy": "anything-goes",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://api.example.com"
            }
          },
          "policies": {
            "inbound": []
          }
        },
        "operationId": "36275d43-148d-4077-9b33-d5b06d3536a7"
      }
    },
    "/v1/developer/check-in": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "post": {
        "tags": ["Developer"],
        "summary": "Developer Check-in",
        "description": "This endpoint is used to check in with the developer Zudoku Service. This will be called by Zudoku after each login to verify the user credentials are still valid.",
        "operationId": "checkIn",
        "responses": {
          "200": {
            "description": "Check-in successful",
            "content": {
              "application/json": {
                "example": {
                  "checkIn": "2021-01-01T00:00:00Z"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "checkIn": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "problem": "Invalid or expired API key",
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "problem": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code",
                      "example": 401
                    },
                    "title": {
                      "type": "string",
                      "description": "Error title",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "anything-goes",
          "handler": {
            "export": "default",
            "module": "$import(./modules/developer)",
            "options": {}
          },
          "policies": {
            "inbound": ["customer-oidc"]
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "API Key": {
        "id": "01JQV6YXW6HYPECP0HXYF4BE48",
        "label": "My API Key",
        "description": "This is used in our mobile app to authenticate requests to our API.",
        "key": "p4ss-0195f573-f1ed-73bd-a870-140124c845dc",
        "createdOn": "2021-01-01T00:00:00Z",
        "lastUsed": "2021-01-01T00:00:00Z",
        "expiresOn": "2021-01-01T00:00:00Z",
        "previousKeys": [
          {
            "key": "p4ss-0195f66f-8fa0-76dd-b4eb-23e6d5647f57",
            "expiresOn": "2021-01-01T00:00:00Z",
            "createdOn": "2021-01-01T00:00:00Z"
          }
        ]
      },
      "API Keys": [
        {
          "id": "01JQV6YXW6HYPECP0HXYF4BE48",
          "label": "My API Key",
          "description": "This is used in our mobile app to authenticate requests to our API.",
          "key": "p4ss-0195f573-f1ed-73bd-a870-140124c845dc",
          "createdOn": "2021-01-01T00:00:00Z",
          "lastUsed": "2021-01-01T00:00:00Z",
          "expiresOn": "2021-01-01T00:00:00Z",
          "previousKeys": [
            {
              "$ref": "#/components/examples/API Key"
            },
            {
              "$ref": "#/components/examples/API Key"
            }
          ]
        },
        {
          "$ref": "#/components/examples/API Key"
        }
      ]
    },
    "schemas": {
      "API Key": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "API Key Container": {
        "type": "object",
        "required": ["id", "label", "createdOn", "key", "previousKeys"],
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string",
            "maxLength": 40,
            "description": "A label for the API key, used to identify the API keys.",
            "example": "My API Key"
          },
          "description": {
            "type": "string",
            "maxLength": 250,
            "description": "A description of the API key, helpful for providing additional notes or context about the API key.",
            "example": "This is used in our mobile app to authenticate requests to our API."
          },
          "key": {
            "$ref": "#/components/schemas/API Key"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the API key was created.",
            "example": "2021-01-01T00:00:00Z"
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the API key was last used.",
            "example": "2021-01-01T00:00:00Z"
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the API key will expire. If the API key is not expired, this will omitted.",
            "example": "2021-01-01T00:00:00Z"
          },
          "previousKeys": {
            "type": "array",
            "description": "Previous keys that have been rotated but might still be valid.",
            "items": {
              "$ref": "#/components/schemas/API Key"
            }
          }
        }
      }
    }
  }
}
