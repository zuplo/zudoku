{
  "openapi": "3.0.0",
  "info": {
    "title": "JSONPlaceholder API",
    "description": "A free fake API for testing and prototyping",
    "version": "1.0.0",
    "contact": {
      "url": "https://jsonplaceholder.typicode.com"
    }
  },
  "servers": [
    {
      "url": "https://jsonplaceholder.typicode.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "summary": "Get all posts",
        "description": "Retrieve a list of all posts",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a post",
        "description": "Create a new post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "summary": "Get post by ID",
        "description": "Retrieve a specific post by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Post ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "summary": "Update post",
        "description": "Update an existing post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Post ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "summary": "Delete post",
        "description": "Delete an existing post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Post ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/posts/{id}/comments": {
      "get": {
        "summary": "Get post comments",
        "description": "Retrieve all comments for a specific post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Post ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The post ID"
          },
          "userId": {
            "type": "integer",
            "description": "The ID of the user who created the post"
          },
          "title": {
            "type": "string",
            "description": "The title of the post"
          },
          "body": {
            "type": "string",
            "description": "The content of the post"
          }
        },
        "required": ["id", "userId", "title", "body"]
      },
      "PostInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "The ID of the user creating the post"
          },
          "title": {
            "type": "string",
            "description": "The title of the post"
          },
          "body": {
            "type": "string",
            "description": "The content of the post"
          }
        },
        "required": ["userId", "title", "body"]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The comment ID"
          },
          "postId": {
            "type": "integer",
            "description": "The ID of the post this comment belongs to"
          },
          "name": {
            "type": "string",
            "description": "The name of the commenter"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email of the commenter"
          },
          "body": {
            "type": "string",
            "description": "The content of the comment"
          }
        },
        "required": ["id", "postId", "name", "email", "body"]
      }
    }
  }
}
